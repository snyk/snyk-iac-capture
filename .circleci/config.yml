version: 2.1

orbs:
  prodsec: snyk/prodsec-orb@1
  snyk: snyk/snyk@1.4.0

executors:
  default:
    docker:
      - image: cimg/go:1.19.4

commands:
  run-with-go-cache:
    parameters:
      tag:
        type: string
      steps:
        type: steps
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "13:48:8d:8e:35:19:6d:a2:2b:a4:57:4e:b9:3e:ab:a0"
      - restore_cache:
          keys:
            - go-mod-v1-<< parameters.tag >>-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - steps: << parameters.steps >>
      - save_cache:
          key: go-mod-v1-<< parameters.tag >>-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          when: always
          paths:
            - ~/go/pkg/mod
            - ~/.cache/go-build

jobs:
  security-scans:
    resource_class: small
    docker:
      - image: cimg/go:1.19.4
    steps:
      - checkout
      - prodsec/security_scans:
          mode: auto
  tidy:
    executor: default
    steps:
      - run-with-go-cache:
          tag: tidy
          steps:
            - run:
                name: Check that go.mod is tidy
                command: go mod tidy && git diff --exit-code go.mod go.sum

  format:
    executor: default
    steps:
      - run-with-go-cache:
          tag: format
          steps:
            - run:
                name: Check formatting
                command: test -z $(go fmt ./...)

  build:
    executor: default
    steps:
      - run-with-go-cache:
          tag: build
          steps:
            - run:
                name: Build
                command: go build ./...

  test:
    executor: default
    steps:
      - run-with-go-cache:
          tag: test
          steps:
            - run:
                name: Test
                command: make test

  lint:
    executor: default
    steps:
      - run-with-go-cache:
          tag: lint
          steps:
            - run:
                name: Run golangci-lint
                command: make lint

  release:
    executor: default
    steps:
      - run-with-go-cache:
          tag: release
          steps:
            - run:
                name: Push new tag to GitHub
                command: make tag
            - run:
                name: Release binaries to GitHub
                command: make release

workflows:
  version: 2
  ci:
    unless:
      equal: [ <<pipeline.git.branch>>, main ]
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: group-infrastructure-as-code-alerts
      - security-scans:
          name: Security Scans
          context:
            - prodsec-snyk
      - tidy:
          name: Tidy
          context: snyk-iac-capture
      - format:
          name: Format
          context: snyk-iac-capture
      - build:
          name: Build
          context: snyk-iac-capture
      - test:
          name: Test
          context: snyk-iac-capture
      - lint:
          name: Lint
          context: snyk-iac-capture
  release:
    when:
      equal: [ <<pipeline.git.branch>>, main ]
    jobs:
      - tidy:
          name: Tidy
          context: snyk-iac-capture
      - format:
          name: Format
          context: snyk-iac-capture
      - build:
          name: Build
          context: snyk-iac-capture
      - test:
          name: Test
          context: snyk-iac-capture
      - lint:
          name: Lint
          context: snyk-iac-capture
      - release:
          name: Release
          context: snyk-iac-capture
          requires:
              - Tidy
              - Format
              - Build
              - Test
              - Lint
